<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="2" total="5" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite B" duration-ms="15" started-at="2016-01-02T10:02:09Z" finished-at="2016-01-02T10:02:09Z">
    <groups>
    </groups>
    <test name="Test 1" duration-ms="3" started-at="2016-01-02T10:02:09Z" finished-at="2016-01-02T10:02:09Z">
      <class name="suiteB.Test3">
        <test-method status="SKIP" signature="test3()[pri:0, instance:suiteB.Test3@61443d8f]" name="test3" duration-ms="2" started-at="2016-01-02T15:32:09Z" finished-at="2016-01-02T15:32:09Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[skipping the test due to N runmode]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: skipping the test due to N runmode
	at suiteB.Test3.test3(Test3.java:11)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1220)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- suiteB.Test3 -->
    </test> <!-- Test 1 -->
    <test name="Test 2" duration-ms="4" started-at="2016-01-02T10:02:09Z" finished-at="2016-01-02T10:02:09Z">
      <class name="suiteB.Test4">
        <test-method status="PASS" signature="test4()[pri:0, instance:suiteB.Test4@47fd17e3]" name="test4" duration-ms="1" started-at="2016-01-02T15:32:09Z" finished-at="2016-01-02T15:32:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- suiteB.Test4 -->
    </test> <!-- Test 2 -->
  </suite> <!-- Suite B -->
  <suite name="Suite A" duration-ms="107" started-at="2016-01-02T10:02:08Z" finished-at="2016-01-02T10:02:09Z">
    <groups>
    </groups>
    <test name="Test 1" duration-ms="45" started-at="2016-01-02T10:02:08Z" finished-at="2016-01-02T10:02:08Z">
      <class name="suiteA.Test1">
        <test-method status="FAIL" signature="test1(java.lang.String, java.lang.String)[pri:0, instance:suiteA.Test1@1ef7fe8e]" name="test1" duration-ms="15" started-at="2016-01-02T15:32:08Z" data-provider="getData" finished-at="2016-01-02T15:32:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[First Set Failed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: First Set Failed
	at org.testng.Assert.fail(Assert.java:94)
	at suiteA.Test1.test1(Test1.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1220)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(java.lang.String, java.lang.String)[pri:0, instance:suiteA.Test1@1ef7fe8e]" name="test1" duration-ms="1" started-at="2016-01-02T15:32:08Z" data-provider="getData" finished-at="2016-01-02T15:32:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- suiteA.Test1 -->
    </test> <!-- Test 1 -->
    <test name="Test 2" duration-ms="8" started-at="2016-01-02T10:02:09Z" finished-at="2016-01-02T10:02:09Z">
      <class name="suiteA.Test2">
        <test-method status="FAIL" signature="test2()[pri:0, instance:suiteA.Test2@7a92922]" name="test2" duration-ms="3" started-at="2016-01-02T15:32:09Z" finished-at="2016-01-02T15:32:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [B] but found [A]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [B] but found [A]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at suiteA.Test2.test2(Test2.java:11)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1220)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- suiteA.Test2 -->
    </test> <!-- Test 2 -->
  </suite> <!-- Suite A -->
  <suite name="Reporting Project" duration-ms="0" started-at="2016-01-02T10:02:09Z" finished-at="2016-01-02T10:02:09Z">
    <groups>
    </groups>
  </suite> <!-- Reporting Project -->
</testng-results>
